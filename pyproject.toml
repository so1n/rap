[tool.poetry]
name = "rap"
version = "0.0.0"
description = "rap(par[::-1]) is advanced and fast python async rpc"
authors = ["So1n <so1n897046026@gamil.com>"]
license = "Apache Software License"
readme = "./README.md"
repository = "https://github.com/so1n/rap"
homepage = "https://github.com/so1n/rap"

[tool.poetry-dynamic-versioning]
enable = true
metadata=false
vcs = "git"
format = "v{base}+{distance}.{commit}"

[tool.poetry.dependencies]
python = "^3.7"
msgpack = "^1.0.0"
typing-extensions = "^4.1.1"

apache-skywalking = { version = "^0.7.0", optional = true}
pycrypto = { version = "2.6.1", optional = true }
starlette = { version = "^0.14.2", optional = true }
aredis = {version = "^1.1.8", optional = true }
opentracing = { version = "^2.4.0", optional = true }
jaeger-client = { version = "^4.4.0", optional = true }
aio-statsd = { version = "^0.2.6", optional = true }
etcd3-py = { version = "^0.1.6", optional = true }
python-consul = { version = "^1.1.0", optional = true}
prometheus-client = { version = "^0.12.0", optional = true}
opentelemetry-api = { version = "^1.11.1", optional = true}
opentelemetry-sdk = { version = "^1.11.1", optional = true}

[tool.poetry.dev-dependencies]
black = "^20.8b1"
mypy = "^0.960"
pytest = "^6.1.2"
isort = "^5.6.4"
pytest-asyncio = "^0.14.0"
pytest-mock = "^3.5.1"
coverage = "^5.4"
uvicorn = "^0.13.4"
httpx = "^0.18.1"
websockets = "^9.0.2"
pre-commit = "^2.14.0"
autoflake = "^1.4"
flake8 = "^3.9.2"
psutil = "^5.8.0"
uvloop = "^0.16.0"
msgpack-rpc-python = "^0.4.1"
pyright = "^1.1.226"
opentelemetry-exporter-jaeger = "^1.11.1"

[tool.poetry.extras]
crypto = ["pycrypto"]
opentracing = ["opentracing", "jaeger-client"]
redis = ["aredis"]
api_gateway = ["starlette"]
statsd = ["aio-statsd"]
etcd = ["etcd3-py"]
consul = ["python-consul"]
apache-skywalking = ["apache-skywalking"]
prometheus = ["prometheus-client"]

[tool.black]
line-length = 120
target-version = ['py37']

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.pytest]
testpaths = "tests"

[tool.coverage.run]
branch = true
source = ["rap"]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # type hints
    "if TYPE_CHECKING:",
    "pass"
]

[tool.pyright]
include = [
  "rap",
  "example",
  "tests"
]
venvPath = "./"
venv = ".venv"

pythonVersion = "3.7"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
#
#[build-system]
#requires = ["poetry-core>=1.0.0"]
#build-backend = "poetry.core.masonry.api"
